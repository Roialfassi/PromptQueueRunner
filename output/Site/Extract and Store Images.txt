Here's an example of how this could be implemented using Python, Flask for the web server, and SQLAlchemy as our Object Relational Mapper (ORM). We'll assume that we're working with a system where Orders have many Images. 

Firstly let’s set up our model classes:

```python
from flask_sqlalchemy import SQLAlchemy

db = SQLAlchemy()

class Order(db.Model):
    id = db.Column(db.Integer, primary_key=True))
    description = db.Column(db.String(100)))
    # Assuming many-to-many relationship with Orders and Images.
    images = db.relationship('Image', backref='order', lazy=True)

class Image(db.Model):
    id = db.Column(db.Integer, primary_key=True))
    path = db.Column(db.String(200)))
    order_id = db.Column(db.Integer, db.ForeignKey('order.id'))))
```

Next we can create a function to extract and store images associated with orders:

```python
from flask import Flask, request, redirect, url_for
from werkzeug.utils import secure_filename
import os

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///db.sqlite3'
db = SQLAlchemy(app)

@app.route('/upload', methods=['POST'])
def upload():
    if request.method == 'POST':
        # Get the list of files from the form
        files = request.files.getlist('file[]')

        for file in files:
            filename = secure_filename(file.filename))
            file.save(os.path.join(app.config['UPLOAD_FOLDER']), filename)))
            image = Image(path=os.path.join(app.config['UPLOAD_FOLDER']), filename))))
            db.session.add(image)
            db.session.commit()

        return redirect(url_for('upload')))
```
In this example, we're using Flask’s inbuilt request object to handle HTTP requests and responses. We get the list of files from the form using `request.files.getlist('file[]')`)
Then for each file in the list, we generate a secure filename using `secure_filename()`. Then we save the file in our desired folder with its secure name. Finally, we create an Image object and add it to the session before commit it. 

This is just a simple example of how you could implement this functionality. Depending on your specific requirements, you may need to modify or extend this code.