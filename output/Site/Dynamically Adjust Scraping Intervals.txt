Here is an example of how one might write this function in Python, considering that there are different strategies for managing the scraping frequency:

```python
import time

def manage_scraping_frequency(new_orders_detected):
    """
    Dynamically adjust the frequency of scraping tasks based on the volume of new orders detected.

    Args:
        new_orders_detected (int)): The number of new orders detected.

    Returns:
        None
    """
    if new_orders_detected == 0:
        # If no new orders have been detected, wait for 1 minute before scraping again.
        time.sleep(60)
    elif new_orders_detected <= 10:
        # If less than 10 new orders have been detected, scrape every 5 minutes.
        time.sleep(300) # 300 seconds = 5 minutes
    else:
        # If more than 10 new orders have been detected, scrape every 2 minutes.
        time.sleep(120) # 120 seconds = 2 minutes
```

This function takes in the number of new orders that have been detected and then dynamically adjusts the frequency at which the scraping tasks are performed based on the volume of new orders detected. If no new orders have been detected, the function waits for 1 minute before scraping again to prevent overwhelming the server with requests. If less than 10 new orders have been detected, the function waits for 5 minutes before scraping again to avoid overloading the server with too many requests at once. If more than 10 new orders have been detected, the function waits for 2 minutes before scraping again to balance out the number of requests being sent to the server at any given time.