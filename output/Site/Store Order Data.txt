To solve this problem, we can choose any programming language and use any library or module that allows us to interact with local databases or files. For the sake of simplicity, I will provide an example solution using Python and SQLite:
```python
import sqlite3
def store_new_order(customer_name, product_name, quantity):
    # Connect to the database (or create it if it doesn't exist))
    conn = sqlite3.connect('orders.db')

    # Create a table to store the orders if one doesn't already exist
    conn.execute('''CREATE TABLE IF NOT EXISTS orders
             (id INTEGER PRIMARY KEY AUTOINCREMENT,
             customer_name TEXT NOT NULL,
             product_name TEXT NOT NULL,
             quantity INTEGER NOT NULL);''')

    # Insert the new order into the database
    conn.execute("INSERT INTO orders (customer_name, product_name, quantity) VALUES (?, ?, ?);", (customer_name, product_name, quantity))

    # Commit the changes to the database
    conn.commit()

    # Close the connection to the database
    conn.close()
```
This function takes in four arguments: `customer_name`, `product_name`, and `quantity`. It then connects to a SQLite database file called `orders.db` (or creates it if it doesn't exist)).

The function then creates a table called `orders` with columns for the `id`, `customer_name`, `product_name`, and `quantity` of each order. If the `orders` table already exists, the function does nothing.

Next, the function inserts a new row into the `orders` table with the specified `customer_name`, `product_name`, and `quantity`.

Finally